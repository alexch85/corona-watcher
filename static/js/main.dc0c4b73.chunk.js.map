{"version":3,"sources":["app/layout/App.module.css","api/index.js","features/components/CountryPicker/CountryPicker.jsx","features/components/DataBoxs/DataBox/DataBox.jsx","features/components/DataBoxs/DataBoxs.jsx","features/components/DataChart/DataChart.jsx","features/components/Hero/Hero.jsx","app/layout/App.jsx","themes/themes.js","index.js","features/components/CountryPicker/CountryPicker.module.css","features/components/DataBoxs/DataBoxs.module.css","features/components/DataBoxs/DataBox/DataBox.module.css","features/components/DataChart/DataChart.module.css","features/components/Hero/Hero.module.css"],"names":["module","exports","fetchData","country","a","changeableUrl","axios","get","data","cases","recovered","deaths","updated","alert","fetchCountries","map","countryData","getValues","valuesType","Object","values","value","fetchDailyData","datesArray","keys","key","casesArray","deathsArray","recoveredArray","activeArray","i","length","push","modifiedData","MyNativeSelect","withStyles","root","width","icon","color","NativeSelect","CountryPicker","handleCountryChange","darkMode","useState","fetchedCountries","setFetchedCountries","useEffect","fetchAPI","className","cx","styles","countryPickerContainer","dark","size","FormControl","formControlDark","formControl","defaultValue","onChange","e","target","DataBox","ctgColor","category","number","dataBoxContainer","Typography","variant","start","end","duration","separator","categoryBox","style","height","margin","backgroundColor","marginRight","toString","toLowerCase","Date","toDateString","DataBoxs","dataBoxsContainer","CircularProgress","DataChart","dailyData","setDailyData","fetchedDailyData","lineChart","labels","date","datasets","label","borderColor","fill","active","barChart","options","legend","display","title","text","dataChartContainer","Hero","handleDarkMode","heroContainer","alt","src","App","setData","setCountry","setDarkMode","fetchedData","AppContanier","AppContent","darkModeControl","Switch","checked","console","log","name","inputProps","theme","createMuiTheme","palette","primary","main","secondary","ReactDOM","render","ThemeProvider","themes","document","getElementById"],"mappings":"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","file":"static/js/main.dc0c4b73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppContanier\":\"App_AppContanier__vUxjR\",\"AppContent\":\"App_AppContent__bGtxr\",\"darkModeControl\":\"App_darkModeControl__2et5I\",\"dark\":\"App_dark__2TFV7\"};","import axios from 'axios';\r\n\r\nconst url = 'https://disease.sh/v3/covid-19/all';\r\n\r\nexport const fetchData = async (country) => {\r\n\tlet changeableUrl = url;\r\n\r\n\tif (country) {\r\n\t\tchangeableUrl = `https://disease.sh/v3/covid-19/countries/${country}`;\r\n\t}\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: { cases, recovered, deaths, updated },\r\n\t\t} = await axios.get(changeableUrl);\r\n\t\treturn { cases, recovered, deaths, updated };\r\n\t} catch (error) {\r\n\t\talert('Something went wrong');\r\n\t}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get('https://disease.sh/v3/covid-19/countries');\r\n\t\treturn data.map((countryData) => countryData.country);\r\n\t} catch (error) {\r\n\t\talert('Something went wrong');\r\n\t}\r\n};\r\n\r\nfunction getValues(valuesType) {\r\n\tconst values = Object.values(valuesType).map((value) => value);\r\n\treturn values;\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: { cases, deaths, recovered },\r\n\t\t} = await axios.get('https://disease.sh/v3/covid-19/historical/all?lastdays=60');\r\n\t\tconst datesArray = Object.keys(cases).map((key) => key);\r\n\t\tconst casesArray = getValues(cases);\r\n\t\tconst deathsArray = getValues(deaths);\r\n\t\tconst recoveredArray = getValues(recovered);\r\n\t\tconst activeArray = [];\r\n\r\n\t\tfor (let i = 0; i <= casesArray.length; i++) activeArray.push(casesArray[i] - recoveredArray[i]);\r\n\r\n\t\tconst modifiedData = {\r\n\t\t\tdatesArray: datesArray,\r\n\t\t\tcasesArray: casesArray,\r\n\t\t\tdeathsArray: deathsArray,\r\n\t\t\trecoveredArray: recoveredArray,\r\n\t\t\tactiveArray: activeArray,\r\n\t\t};\r\n\r\n\t\treturn modifiedData;\r\n\t} catch (error) {\r\n\t\talert('Something went wrong...');\r\n\t}\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport styles from './CountryPicker.module.css';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport { FormControl, NativeSelect } from '@material-ui/core';\r\nimport { fetchCountries } from '../../../api';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport cx from 'classnames';\r\n\r\nconst MyNativeSelect = withStyles({\r\n\troot: {\r\n\t\twidth: 200,\r\n\t},\r\n\ticon: {\r\n\t\tcolor: '#777777',\r\n\t},\r\n})(NativeSelect);\r\n\r\nexport default function CountryPicker({ handleCountryChange, darkMode }) {\r\n\tconst [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetFetchedCountries(await fetchCountries());\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t}, [setFetchedCountries]);\r\n\treturn (\r\n\t\t<div className={darkMode ? cx(styles.countryPickerContainer, styles.dark) : styles.countryPickerContainer}>\r\n\t\t\t<LanguageIcon size='1.3em' /> <p>Select Region:</p>\r\n\t\t\t<FormControl className={darkMode ? styles.formControlDark : styles.formControl}>\r\n\t\t\t\t<MyNativeSelect color='primary' defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\r\n\t\t\t\t\t<option value=''>Global</option>\r\n\t\t\t\t\t{fetchedCountries.map((country, i) => (\r\n\t\t\t\t\t\t<option value={country} key={i}>\r\n\t\t\t\t\t\t\t{country}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</MyNativeSelect>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport CountUp from 'react-countup';\r\nimport styles from './DataBox.module.css';\r\n\r\nexport default function DataBox({ ctgColor, category, number }) {\r\n\treturn (\r\n\t\t<div className={styles.dataBoxContainer}>\r\n\t\t\t<Typography variant='h4' color='secondary'>\r\n\t\t\t\t<CountUp start={0} end={number} duration={1.5} separator=',' />\r\n\t\t\t</Typography>\r\n\t\t\t<div className={styles.categoryBox}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: '30px',\r\n\t\t\t\t\t\theight: '20px',\r\n\t\t\t\t\t\tmargin: '10px 0',\r\n\t\t\t\t\t\tbackgroundColor: ctgColor,\r\n\t\t\t\t\t\tmarginRight: '10px',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Typography variant='h5' color='secondary'>\r\n\t\t\t\t\t{category}\r\n\t\t\t\t</Typography>\r\n\t\t\t</div>\r\n\r\n\t\t\t<Typography color='secondary'>\r\n\t\t\t\tTotal reported {category.toString().toLowerCase()} from covid-19 by {new Date().toDateString()}\r\n\t\t\t</Typography>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport DataBox from './DataBox/DataBox';\r\nimport styles from './DataBoxs.module.css';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nimport cx from 'classnames';\r\n\r\nexport default function DataBoxs({ data: { cases, recovered, deaths }, darkMode }) {\r\n\tif (!cases) {\r\n\t\treturn <CircularProgress color='secondary' />;\r\n\t}\r\n\treturn (\r\n\t\t<div className={darkMode ? cx(styles.dataBoxsContainer, styles.dark) : styles.dataBoxsContainer}>\r\n\t\t\t<DataBox category={'Infected'} ctgColor={'#f9903c'} number={cases} />\r\n\t\t\t<DataBox category={'Active'} ctgColor={'#1787e5'} number={cases - recovered} />\r\n\t\t\t<DataBox category={'Recovered'} ctgColor={'#17e590'} number={recovered} />\r\n\t\t\t<DataBox category={'Deaths'} ctgColor={'#f36060'} number={deaths} />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport styles from './DataChart.module.css';\r\nimport { fetchDailyData } from '../../../api/index';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nexport default function DataChart({ data: { cases, recovered, deaths }, country }) {\r\n\tconst [dailyData, setDailyData] = useState({});\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchedDailyData = async () => {\r\n\t\t\tsetDailyData(await fetchDailyData());\r\n\t\t};\r\n\t\tfetchedDailyData();\r\n\t}, []);\r\n\r\n\tconst lineChart = dailyData.casesArray ? (\r\n\t\t<Line\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: dailyData.datesArray.map((date) => date),\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.casesArray.map((cases) => cases),\r\n\t\t\t\t\t\tlabel: 'Infected',\r\n\t\t\t\t\t\tborderColor: '#f9903c',\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.activeArray.map((active) => active),\r\n\t\t\t\t\t\tlabel: 'Active',\r\n\t\t\t\t\t\tborderColor: '#1787e5',\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.recoveredArray.map((recovered) => recovered),\r\n\t\t\t\t\t\tlabel: 'Recovered',\r\n\t\t\t\t\t\tborderColor: '#17e590',\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.deathsArray.map((deaths) => deaths),\r\n\t\t\t\t\t\tlabel: 'Deaths',\r\n\t\t\t\t\t\tborderColor: ' #f36060',\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t\twidth={100}\r\n\t\t\theight={50}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\tconst barChart = cases ? (\r\n\t\t<Bar\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: ['Infected', 'Active', 'Recovered', 'Deaths'],\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'People',\r\n\t\t\t\t\t\tbackgroundColor: ['#f9903c', '#1787e5', '#17e590', ' #f36060'],\r\n\t\t\t\t\t\tdata: [cases, cases - recovered, recovered, deaths],\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t\toptions={{\r\n\t\t\t\tlegend: { display: false },\r\n\t\t\t\ttitle: { display: true, text: `Current state in ${country}` },\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\treturn <div className={styles.dataChartContainer}>{country ? barChart : lineChart}</div>;\r\n}\r\n","import React from 'react';\r\nimport styles from './Hero.module.css';\r\n\r\nexport default function Hero({ darkMode, handleDarkMode }) {\r\n\treturn (\r\n\t\t<div className={styles.heroContainer}>\r\n\t\t\t<img alt='logo' src='/images/cw-logo.svg' />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport styles from './App.module.css';\n\nimport CountryPicker from '../../features/components/CountryPicker/CountryPicker';\nimport DataBoxs from '../../features/components/DataBoxs/DataBoxs';\nimport DataChart from '../../features/components/DataChart/DataChart';\nimport Hero from '../../features/components/Hero/Hero';\n\nimport { fetchData } from '../../api/index';\n\nimport { Switch, Typography } from '@material-ui/core';\n\nimport cx from 'classnames';\n\nfunction App() {\n\tconst [data, setData] = useState({});\n\tconst [country, setCountry] = useState('');\n\tconst [darkMode, setDarkMode] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst fetchAPI = async () => {\n\t\t\tsetData(await fetchData());\n\t\t};\n\t\tfetchAPI();\n\t}, []);\n\n\tconst handleCountryChange = async (country) => {\n\t\tconst fetchedData = await fetchData(country);\n\t\tsetData(fetchedData);\n\t\tsetCountry(country);\n\t};\n\n\tconst handleDarkMode = () => {\n\t\tsetDarkMode(!darkMode);\n\t\tconsole.log(darkMode);\n\t};\n\n\treturn (\n\t\t<div className={darkMode ? cx(styles.AppContanier, styles.dark) : styles.AppContanier}>\n\t\t\t<Hero />\n\t\t\t<CountryPicker darkMode={darkMode} handleCountryChange={handleCountryChange} />\n\t\t\t<div className={styles.AppContent}>\n\t\t\t\t<div className={styles.darkModeControl}>\n\t\t\t\t\t<Typography color='secondary'>\n\t\t\t\t\t\t<b>Dark mode:</b>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tchecked={darkMode}\n\t\t\t\t\t\tonChange={handleDarkMode}\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tname='dark mode'\n\t\t\t\t\t\tinputProps={{ 'aria-label': 'primary checkbox' }}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant='h5'\n\t\t\t\t\tcolor='secondary'\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmargin: '10px 0 15px',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{new Date().toDateString()}\n\t\t\t\t</Typography>\n\t\t\t\t<DataBoxs darkMode={darkMode} data={data} />\n\t\t\t\t<DataChart data={data} country={country} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tmain: '#15ffc0',\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: '#666666',\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/layout/App';\n\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport themes from './themes/themes';\n\nReactDOM.render(\n\t<ThemeProvider theme={themes}>\n\t\t<App />\n\t</ThemeProvider>,\n\tdocument.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countryPickerContainer\":\"CountryPicker_countryPickerContainer__1YhP6\",\"dark\":\"CountryPicker_dark__3gXzw\",\"formControl\":\"CountryPicker_formControl__2y_cy\",\"formControlDark\":\"CountryPicker_formControlDark__Osqct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataBoxsContainer\":\"DataBoxs_dataBoxsContainer__2x8cI\",\"dark\":\"DataBoxs_dark__3je2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataBoxContainer\":\"DataBox_dataBoxContainer__2QMSw\",\"categoryBox\":\"DataBox_categoryBox__3GLHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataChartContainer\":\"DataChart_dataChartContainer__1wEoe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heroContainer\":\"Hero_heroContainer__3I2gQ\"};"],"sourceRoot":""}